// Mocks generated by Mockito 5.4.4 from annotations
// in walletkit_dart/test/mocks.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i6;

import 'package:http/http.dart' as _i2;
import 'package:mockito/mockito.dart' as _i1;
import 'package:mockito/src/dummies.dart' as _i7;
import 'package:walletkit_dart/src/common/json_rpc.dart' as _i3;
import 'package:walletkit_dart/src/crypto/evm/entities/transactions/etherscan_transaction.dart'
    as _i9;
import 'package:walletkit_dart/src/crypto/evm/repositories/etherscan/etherscan_explorer.dart'
    as _i8;
import 'package:walletkit_dart/src/domain/entities/amount.dart' as _i5;
import 'package:walletkit_dart/src/domain/entities/coin_entity.dart' as _i4;
import 'package:walletkit_dart/src/domain/entities/tx_gasFee_entity.dart' as _i10;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeClient_0 extends _i1.SmartFake implements _i2.Client {
  _FakeClient_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeRPCResponse_1 extends _i1.SmartFake implements _i3.RPCResponse {
  _FakeRPCResponse_1(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeEvmCoinEntity_2 extends _i1.SmartFake implements _i4.EvmCoinEntity {
  _FakeEvmCoinEntity_2(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeDuration_3 extends _i1.SmartFake implements Duration {
  _FakeDuration_3(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeAmount_4 extends _i1.SmartFake implements _i5.Amount {
  _FakeAmount_4(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeFuture_5<T1> extends _i1.SmartFake implements _i6.Future<T1> {
  _FakeFuture_5(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [JsonRPC].
///
/// See the documentation for Mockito's code generation for more information.
class MockJsonRPC extends _i1.Mock implements _i3.JsonRPC {
  @override
  _i2.Client get client => (super.noSuchMethod(
        Invocation.getter(#client),
        returnValue: _FakeClient_0(
          this,
          Invocation.getter(#client),
        ),
        returnValueForMissingStub: _FakeClient_0(
          this,
          Invocation.getter(#client),
        ),
      ) as _i2.Client);

  @override
  String get url => (super.noSuchMethod(
        Invocation.getter(#url),
        returnValue: _i7.dummyValue<String>(
          this,
          Invocation.getter(#url),
        ),
        returnValueForMissingStub: _i7.dummyValue<String>(
          this,
          Invocation.getter(#url),
        ),
      ) as String);

  @override
  _i6.Future<_i3.RPCResponse> call(
    String? function, [
    List<dynamic>? params,
  ]) =>
      (super.noSuchMethod(
        Invocation.method(
          #call,
          [
            function,
            params,
          ],
        ),
        returnValue: _i6.Future<_i3.RPCResponse>.value(_FakeRPCResponse_1(
          this,
          Invocation.method(
            #call,
            [
              function,
              params,
            ],
          ),
        )),
        returnValueForMissingStub: _i6.Future<_i3.RPCResponse>.value(_FakeRPCResponse_1(
          this,
          Invocation.method(
            #call,
            [
              function,
              params,
            ],
          ),
        )),
      ) as _i6.Future<_i3.RPCResponse>);
}

/// A class which mocks [ZeniqScanExplorer].
///
/// See the documentation for Mockito's code generation for more information.
class MockZeniqScanExplorer extends _i1.Mock implements _i8.ZeniqScanExplorer {
  @override
  _i4.EvmCoinEntity get currency => (super.noSuchMethod(
        Invocation.getter(#currency),
        returnValue: _FakeEvmCoinEntity_2(
          this,
          Invocation.getter(#currency),
        ),
        returnValueForMissingStub: _FakeEvmCoinEntity_2(
          this,
          Invocation.getter(#currency),
        ),
      ) as _i4.EvmCoinEntity);

  @override
  String get base => (super.noSuchMethod(
        Invocation.getter(#base),
        returnValue: _i7.dummyValue<String>(
          this,
          Invocation.getter(#base),
        ),
        returnValueForMissingStub: _i7.dummyValue<String>(
          this,
          Invocation.getter(#base),
        ),
      ) as String);

  @override
  List<String> get apiKeys => (super.noSuchMethod(
        Invocation.getter(#apiKeys),
        returnValue: <String>[],
        returnValueForMissingStub: <String>[],
      ) as List<String>);

  @override
  Map<String, bool> get endpointNeedsApiKey => (super.noSuchMethod(
        Invocation.getter(#endpointNeedsApiKey),
        returnValue: <String, bool>{},
        returnValueForMissingStub: <String, bool>{},
      ) as Map<String, bool>);

  @override
  Map<String, DateTime> get apiKeyExcludedUntil => (super.noSuchMethod(
        Invocation.getter(#apiKeyExcludedUntil),
        returnValue: <String, DateTime>{},
        returnValueForMissingStub: <String, DateTime>{},
      ) as Map<String, DateTime>);

  @override
  List<String> get invalidApiKeys => (super.noSuchMethod(
        Invocation.getter(#invalidApiKeys),
        returnValue: <String>[],
        returnValueForMissingStub: <String>[],
      ) as List<String>);

  @override
  Duration get noApiKeyRetryIntervall => (super.noSuchMethod(
        Invocation.getter(#noApiKeyRetryIntervall),
        returnValue: _FakeDuration_3(
          this,
          Invocation.getter(#noApiKeyRetryIntervall),
        ),
        returnValueForMissingStub: _FakeDuration_3(
          this,
          Invocation.getter(#noApiKeyRetryIntervall),
        ),
      ) as Duration);

  @override
  Duration get apiKeyRetryIntervall => (super.noSuchMethod(
        Invocation.getter(#apiKeyRetryIntervall),
        returnValue: _FakeDuration_3(
          this,
          Invocation.getter(#apiKeyRetryIntervall),
        ),
        returnValueForMissingStub: _FakeDuration_3(
          this,
          Invocation.getter(#apiKeyRetryIntervall),
        ),
      ) as Duration);

  @override
  String buildTransactionEndpoint({
    required String? address,
    int? startblock,
    int? endblock,
    int? page,
    int? offset,
    _i8.Sorting? sorting,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #buildTransactionEndpoint,
          [],
          {
            #address: address,
            #startblock: startblock,
            #endblock: endblock,
            #page: page,
            #offset: offset,
            #sorting: sorting,
          },
        ),
        returnValue: _i7.dummyValue<String>(
          this,
          Invocation.method(
            #buildTransactionEndpoint,
            [],
            {
              #address: address,
              #startblock: startblock,
              #endblock: endblock,
              #page: page,
              #offset: offset,
              #sorting: sorting,
            },
          ),
        ),
        returnValueForMissingStub: _i7.dummyValue<String>(
          this,
          Invocation.method(
            #buildTransactionEndpoint,
            [],
            {
              #address: address,
              #startblock: startblock,
              #endblock: endblock,
              #page: page,
              #offset: offset,
              #sorting: sorting,
            },
          ),
        ),
      ) as String);

  @override
  String buildERC20TransactionEndpoint({
    required String? address,
    required String? contractAddress,
    int? startblock,
    int? endblock,
    int? page,
    int? offset,
    _i8.Sorting? sorting,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #buildERC20TransactionEndpoint,
          [],
          {
            #address: address,
            #contractAddress: contractAddress,
            #startblock: startblock,
            #endblock: endblock,
            #page: page,
            #offset: offset,
            #sorting: sorting,
          },
        ),
        returnValue: _i7.dummyValue<String>(
          this,
          Invocation.method(
            #buildERC20TransactionEndpoint,
            [],
            {
              #address: address,
              #contractAddress: contractAddress,
              #startblock: startblock,
              #endblock: endblock,
              #page: page,
              #offset: offset,
              #sorting: sorting,
            },
          ),
        ),
        returnValueForMissingStub: _i7.dummyValue<String>(
          this,
          Invocation.method(
            #buildERC20TransactionEndpoint,
            [],
            {
              #address: address,
              #contractAddress: contractAddress,
              #startblock: startblock,
              #endblock: endblock,
              #page: page,
              #offset: offset,
              #sorting: sorting,
            },
          ),
        ),
      ) as String);

  @override
  String buildBalanceEndpoint(String? address) => (super.noSuchMethod(
        Invocation.method(
          #buildBalanceEndpoint,
          [address],
        ),
        returnValue: _i7.dummyValue<String>(
          this,
          Invocation.method(
            #buildBalanceEndpoint,
            [address],
          ),
        ),
        returnValueForMissingStub: _i7.dummyValue<String>(
          this,
          Invocation.method(
            #buildBalanceEndpoint,
            [address],
          ),
        ),
      ) as String);

  @override
  String buildTokenBalanceEndpoint(
    String? address,
    String? contractAddress,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #buildTokenBalanceEndpoint,
          [
            address,
            contractAddress,
          ],
        ),
        returnValue: _i7.dummyValue<String>(
          this,
          Invocation.method(
            #buildTokenBalanceEndpoint,
            [
              address,
              contractAddress,
            ],
          ),
        ),
        returnValueForMissingStub: _i7.dummyValue<String>(
          this,
          Invocation.method(
            #buildTokenBalanceEndpoint,
            [
              address,
              contractAddress,
            ],
          ),
        ),
      ) as String);

  @override
  String buildERC721TransactionEndpoint({
    required String? address,
    String? contractAddress,
    int? startblock,
    int? endblock,
    int? page,
    int? offset,
    _i8.Sorting? sorting,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #buildERC721TransactionEndpoint,
          [],
          {
            #address: address,
            #contractAddress: contractAddress,
            #startblock: startblock,
            #endblock: endblock,
            #page: page,
            #offset: offset,
            #sorting: sorting,
          },
        ),
        returnValue: _i7.dummyValue<String>(
          this,
          Invocation.method(
            #buildERC721TransactionEndpoint,
            [],
            {
              #address: address,
              #contractAddress: contractAddress,
              #startblock: startblock,
              #endblock: endblock,
              #page: page,
              #offset: offset,
              #sorting: sorting,
            },
          ),
        ),
        returnValueForMissingStub: _i7.dummyValue<String>(
          this,
          Invocation.method(
            #buildERC721TransactionEndpoint,
            [],
            {
              #address: address,
              #contractAddress: contractAddress,
              #startblock: startblock,
              #endblock: endblock,
              #page: page,
              #offset: offset,
              #sorting: sorting,
            },
          ),
        ),
      ) as String);

  @override
  _i6.Future<List<_i9.EtherscanTransaction>> fetchTransactions({
    required String? address,
    int? startblock,
    int? endblock,
    int? page,
    int? offset,
    _i8.Sorting? sorting,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #fetchTransactions,
          [],
          {
            #address: address,
            #startblock: startblock,
            #endblock: endblock,
            #page: page,
            #offset: offset,
            #sorting: sorting,
          },
        ),
        returnValue: _i6.Future<List<_i9.EtherscanTransaction>>.value(<_i9.EtherscanTransaction>[]),
        returnValueForMissingStub:
            _i6.Future<List<_i9.EtherscanTransaction>>.value(<_i9.EtherscanTransaction>[]),
      ) as _i6.Future<List<_i9.EtherscanTransaction>>);

  @override
  _i6.Future<List<_i9.EtherscanTransaction>> fetchERC20Transactions({
    required String? contractAddress,
    required String? address,
    int? startblock,
    int? endblock,
    int? page,
    int? offset,
    _i8.Sorting? sorting,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #fetchERC20Transactions,
          [],
          {
            #contractAddress: contractAddress,
            #address: address,
            #startblock: startblock,
            #endblock: endblock,
            #page: page,
            #offset: offset,
            #sorting: sorting,
          },
        ),
        returnValue: _i6.Future<List<_i9.EtherscanTransaction>>.value(<_i9.EtherscanTransaction>[]),
        returnValueForMissingStub:
            _i6.Future<List<_i9.EtherscanTransaction>>.value(<_i9.EtherscanTransaction>[]),
      ) as _i6.Future<List<_i9.EtherscanTransaction>>);

  @override
  _i6.Future<BigInt> fetchBalance({required String? address}) => (super.noSuchMethod(
        Invocation.method(
          #fetchBalance,
          [],
          {#address: address},
        ),
        returnValue: _i6.Future<BigInt>.value(_i7.dummyValue<BigInt>(
          this,
          Invocation.method(
            #fetchBalance,
            [],
            {#address: address},
          ),
        )),
        returnValueForMissingStub: _i6.Future<BigInt>.value(_i7.dummyValue<BigInt>(
          this,
          Invocation.method(
            #fetchBalance,
            [],
            {#address: address},
          ),
        )),
      ) as _i6.Future<BigInt>);

  @override
  _i6.Future<BigInt> fetchTokenBalance({
    required String? address,
    required String? contractAddress,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #fetchTokenBalance,
          [],
          {
            #address: address,
            #contractAddress: contractAddress,
          },
        ),
        returnValue: _i6.Future<BigInt>.value(_i7.dummyValue<BigInt>(
          this,
          Invocation.method(
            #fetchTokenBalance,
            [],
            {
              #address: address,
              #contractAddress: contractAddress,
            },
          ),
        )),
        returnValueForMissingStub: _i6.Future<BigInt>.value(_i7.dummyValue<BigInt>(
          this,
          Invocation.method(
            #fetchTokenBalance,
            [],
            {
              #address: address,
              #contractAddress: contractAddress,
            },
          ),
        )),
      ) as _i6.Future<BigInt>);

  @override
  _i6.Future<_i5.Amount> fetchBalanceForToken(
    String? address,
    _i4.CoinEntity? token,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #fetchBalanceForToken,
          [
            address,
            token,
          ],
        ),
        returnValue: _i6.Future<_i5.Amount>.value(_FakeAmount_4(
          this,
          Invocation.method(
            #fetchBalanceForToken,
            [
              address,
              token,
            ],
          ),
        )),
        returnValueForMissingStub: _i6.Future<_i5.Amount>.value(_FakeAmount_4(
          this,
          Invocation.method(
            #fetchBalanceForToken,
            [
              address,
              token,
            ],
          ),
        )),
      ) as _i6.Future<_i5.Amount>);

  @override
  _i6.Future<List<_i9.EtherscanTransaction>> fetchERC721Transactions({
    required String? address,
    String? contractAddress,
    int? startblock,
    int? endblock,
    int? page,
    int? offset,
    _i8.Sorting? sorting,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #fetchERC721Transactions,
          [],
          {
            #address: address,
            #contractAddress: contractAddress,
            #startblock: startblock,
            #endblock: endblock,
            #page: page,
            #offset: offset,
            #sorting: sorting,
          },
        ),
        returnValue: _i6.Future<List<_i9.EtherscanTransaction>>.value(<_i9.EtherscanTransaction>[]),
        returnValueForMissingStub:
            _i6.Future<List<_i9.EtherscanTransaction>>.value(<_i9.EtherscanTransaction>[]),
      ) as _i6.Future<List<_i9.EtherscanTransaction>>);

  @override
  _i6.Future<_i10.EvmNetworkFees> fetchGasPrice() => (super.noSuchMethod(
        Invocation.method(
          #fetchGasPrice,
          [],
        ),
        returnValue: _i6.Future<_i10.EvmNetworkFees>.value(_i7.dummyValue<_i10.EvmNetworkFees>(
          this,
          Invocation.method(
            #fetchGasPrice,
            [],
          ),
        )),
        returnValueForMissingStub:
            _i6.Future<_i10.EvmNetworkFees>.value(_i7.dummyValue<_i10.EvmNetworkFees>(
          this,
          Invocation.method(
            #fetchGasPrice,
            [],
          ),
        )),
      ) as _i6.Future<_i10.EvmNetworkFees>);

  @override
  _i6.Future<int?> fetchEstimatedTime(int? gasPrice) => (super.noSuchMethod(
        Invocation.method(
          #fetchEstimatedTime,
          [gasPrice],
        ),
        returnValue: _i6.Future<int?>.value(),
        returnValueForMissingStub: _i6.Future<int?>.value(),
      ) as _i6.Future<int?>);

  @override
  String getBaseEtherscanEndpoint(String? fullUrl) => (super.noSuchMethod(
        Invocation.method(
          #getBaseEtherscanEndpoint,
          [fullUrl],
        ),
        returnValue: _i7.dummyValue<String>(
          this,
          Invocation.method(
            #getBaseEtherscanEndpoint,
            [fullUrl],
          ),
        ),
        returnValueForMissingStub: _i7.dummyValue<String>(
          this,
          Invocation.method(
            #getBaseEtherscanEndpoint,
            [fullUrl],
          ),
        ),
      ) as String);

  @override
  _i6.Future<T> fetchEtherscanWithRatelimitRetries<T>(
    String? rawEndpoint, {
    int? maxRetries = 10,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #fetchEtherscanWithRatelimitRetries,
          [rawEndpoint],
          {#maxRetries: maxRetries},
        ),
        returnValue: _i7.ifNotNull(
              _i7.dummyValueOrNull<T>(
                this,
                Invocation.method(
                  #fetchEtherscanWithRatelimitRetries,
                  [rawEndpoint],
                  {#maxRetries: maxRetries},
                ),
              ),
              (T v) => _i6.Future<T>.value(v),
            ) ??
            _FakeFuture_5<T>(
              this,
              Invocation.method(
                #fetchEtherscanWithRatelimitRetries,
                [rawEndpoint],
                {#maxRetries: maxRetries},
              ),
            ),
        returnValueForMissingStub: _i7.ifNotNull(
              _i7.dummyValueOrNull<T>(
                this,
                Invocation.method(
                  #fetchEtherscanWithRatelimitRetries,
                  [rawEndpoint],
                  {#maxRetries: maxRetries},
                ),
              ),
              (T v) => _i6.Future<T>.value(v),
            ) ??
            _FakeFuture_5<T>(
              this,
              Invocation.method(
                #fetchEtherscanWithRatelimitRetries,
                [rawEndpoint],
                {#maxRetries: maxRetries},
              ),
            ),
      ) as _i6.Future<T>);
}
